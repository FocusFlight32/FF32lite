/*

FF32lite from FocusFlight, a new alternative firmware
for the Naze32 controller

Original work Copyright (c) 2013 John Ihlein

This file is part of FF32lite.

Includes code and/or ideas from:

  1)BaseFlight
  2)S.O.H. Madgwick

FF32lite is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

FF32lite is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with FF32lite. If not, see <http://www.gnu.org/licenses/>.

*/

///////////////////////////////////////////////////////////////////////////////

#pragma once

///////////////////////////////////////////////////////////////////////////////

extern uint32andUint8_t d1;

extern uint32_t d1Value;

extern uint32andUint8_t d2;

extern uint32_t d2Value;

extern int32_t ms5611Temperature;

extern uint8_t newPressureReading;

extern uint8_t newTemperatureReading;

///////////////////////////////////////////////////////////////////////////////
// MS5611 Read Temperature Request Pressure
///////////////////////////////////////////////////////////////////////////////

void ms5611ReadTemperatureRequestPressure(void);

///////////////////////////////////////////////////////////////////////////////
// MS5611 Read Pressure Request Pressure
///////////////////////////////////////////////////////////////////////////////

void ms5611ReadPressureRequestPressure(void);

///////////////////////////////////////////////////////////////////////////////
// MS5611 Read Pressure Request Temperature
///////////////////////////////////////////////////////////////////////////////

void ms5611ReadPressureRequestTemperature(void);

///////////////////////////////////////////////////////////////////////////////
// Calculate MS5611 Temperature
///////////////////////////////////////////////////////////////////////////////

void calculateMs5611Temperature(void);

///////////////////////////////////////////////////////////////////////////////
// Calculate MS5611 Pressure Altitude
///////////////////////////////////////////////////////////////////////////////

void calculateMs5611PressureAltitude(void);

///////////////////////////////////////////////////////////////////////////////
// MS5611 Initialization
///////////////////////////////////////////////////////////////////////////////

void initMs5611(void);

///////////////////////////////////////////////////////////////////////////////
